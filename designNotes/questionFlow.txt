Overall Game Flow
-Last player joins
-Welcome message followed by count down to first question.
-When countdown ends question displays and question timer starts.
-Current question ends either when all players have submitted their answer or timer has ended.
-Question score for all players are displayed on screen
-Timer expires or next question button for all players has been clicked
-Next question starts
-repeat until backend says game ends.
-display final standings

Component needs Question
-sends request to backend
-backend calls the Question Constructor
-Question Constructor creates question object with:
  * question text
  * correct answer
  * incorrect answers
-backend saves question object to question table in db
-backend sends question object without correct answer to all players in socket room
-frontend saves question info in store
-frontend displays question data on game component for players
-question timer starts for players
-players click to answer
-frontend sends the answer chosen by player and the time taken to answer to the backend (this happens for all players in the game)
-backend calculates question score by checking if player was right, and if so, turns time taken into score.
-backend adds question score to total score for each GamePlayer.
-after round ends, backend checks to see if game has ended.
-backend sends score for each player to all players on frontend and notifies them if the game has ended.
-frontend displays score of each player for that question (if giant game, display ___ number top players scores)
-frontend needs to store:
  * total score for all players
  * array of scores for each question for THAT player
-frontend displays total score for each player in the sidebar (this could be sorted by score)

************************
example questionChoices object
// questionSkeletonKey:
//   mostOrLeast:["most"]
//   objectNoun:["home runs"]
//   subjectNoun:["player"]
//   timeFrame:[" in "]
//   verb:["hit"]
//   year:2008

// questionType:"overall"
// statCategory:"HOME RUNS"
// teamOrPlayer:"singlePlayer"
// timeFrame:"singleSeason"
// mostOrLeast:"most"

**********************************

//THOUGHT SPACE AS DESIGNS EVOLVED
//very rough, placeholder question skeletons. Probably won't need phrasing array.
// const questionCat1 = {
//   phrasing: ['homerun', 'player', 'singleYear', 'most', 'league'],
//   text: [`who led the ${this.league} in homeruns in ${this.year}?`, `In ${this.year}, which player smacked the most dingers in the ${this.league}`]
// }

// const question2 = {
//   phrasing: ['homeruns', 'yearRange', 'most']
// }

// text: [`What manager led the ${this.team} to the ${this.title} title in ${this.year}?`, `In ${this.year}, who skippered the ${this.team} to win the ${this.title} crown?`, `The ${this.year} manager of the ${this.team} captained them to the ${this.title} championship. Name him.`]
// phrasing: ['title', 'league', 'specificYear']

// text: [`In ${this.year}, what player led the ${this.league} in homeruns per at bat (min xxx ABs)?`, `What player lead the ${this.league} in ${this.year} when he hit a homerun every X at bats?`, `X player led the ${this.league} when he hit a homerun every X times he came to the plate in ${this.year`]
// phrasing: ['homeruns', 'at bats', 'league', 'specificYear']

// text: [`Who is Xth position all time in doubles for a career?`, `What player holds the all-time record for most two-baggers over the course of their career?`, `This player is Xth in MLB history with Y doubles over the course of his career.`]
// phrasing: ['doubles', 'career', 'most']
